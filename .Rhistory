return(data)}
sort_head(df<- iris ,var.name<- "Petal.Length", n<- 5)
sort_head<- function(df, var.name, n) {
data[order(df$var.name, decreasing = FALSE),]
return(data)}
sort_head(df<- iris ,var.name<- "Petal.Length", n<- 5)
sort_head<- function(df, var.name, n) {
df[order(df$var.name, decreasing = FALSE),]
return(df)}
sort_head(df<- iris ,var.name<- "Petal.Length", n<- 5)
sort_head<- function(df, var.name, n) {
df[order(df$var.name, decreasing = FALSE),]
return(df)}
colnames(df)
sort_head<- function(df, var.name, n) {
df[order(df$var.name, decreasing = FALSE),]
return(df)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length)
sort_head<- function(df, var_name, n) {
df[order(df$var_name, decreasing = FALSE),]
return(df)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length)
sort_head<- function(df, var_name, n) {
df[order(df$var_name)]
return(df)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length)
# data[order(data$X1, decreasing = FALSE),]
# data[order(data$X1, decreasing = FALSE),]
#----------------------------------------------------------
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length)
print(sorted_df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
sorted_df<- sort_head(df,  Petal.Length, 5)
print(sorted_df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
df<- iris
sorted_df<- sort_head(df,  Petal.Length, 5)
print(sorted_df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
df<- iris
print(df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name,decreasing= TRUE), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name,decreasing= TRUE), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name,decreasing= TRUE), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
sorted_df<- sort_head(df,  "Petal.Length", 5)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name,decreasing= TRUE), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
newdata <- df[sort(df$Petal.Length), ]
head(newdata)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name,decreasing= TRUE), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
newdata <- df[sort(df$Petal.Length,decreasing= TRUE), ]
head(newdata)
newdata <- df[sort(df$Petal.Length,decreasing= TRUE), ]
print(newdata)
sort_head<- function(df, var_name, n) {
newdata <- df[sort(df$var_name,decreasing= TRUE), ]
return(newdata)}
colnames(df)
df<- iris
head(df)
newdata <- sort(df$Petal.Length,decreasing= TRUE)
print(newdata)
sort_head<- function(df, var.name, n){
data<- order(df[ ,var.name], decreasing = TRUE, n)
return(data)}
sort_head(df = iris, var.name = "Petal.Length", n = 5)
sort_head<- function(df, var_name, n){
data<- order(df[ ,var_name], decreasing = TRUE, n)
return(data)}
sort_head(df = iris, var.name = "Petal.Length", n = 5)
sort_head<- function(df, var_name, n){
data<- order(df[ ,var_name], decreasing = TRUE, n)
return(data)}
sort_head(df = iris, var.name = "Petal.Length", n = 5)
# sort_head<- function(df, var_name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
# return(newdata)}
# colnames(df)
# df<- iris
# head(df)
# newdata <- sort(df$Petal.Length,decreasing= TRUE)
# print(newdata)
# sort_head<- function(df, var_name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
# return(newdata)}
# colnames(df)
# df<- iris
# head(df)
# newdata <- sort(df$Petal.Length,decreasing= TRUE)
# print(newdata)
df <- iris
new_data <- df[order(df$Petal.Length, decreasing = TRUE),]
print(new_data)
# sort_head<- function(df, var_name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
# return(newdata)}
# colnames(df)
# df<- iris
# head(df)
# newdata <- sort(df$Petal.Length,decreasing= TRUE)
# print(newdata)
df <- iris
new_data <- df[order(df$Petal.Length, decreasing = TRUE),n= 5]
source("C:/Users/Azhar Uddin/Desktop/lab1.R")
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df$var.name, decreasing = TRUE),]
return(new_data[n,])}
df<- iris
sorted_df<- sort_head(df,  "Petal.Length", 5)
print(sorted_df)
sort_head<- function(df, var_name, n){
data<- order(df[ ,var_name], decreasing = TRUE, n)
return(data)}
sort_head(df = iris, var.name = "Petal.Length", n = 5)
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df$var.name, decreasing = TRUE),]
return(new_data[n,])}
df<- iris
sorted_df<- sort_head(df,  "Petal.Length", 5)
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df$var.name, decreasing = TRUE),]
return(new_data[n,])}
df<- iris
sorted_df<- sort_head(df, Petal.Length, 5)
print(sorted_df)
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df$Petal.Length, decreasing = TRUE),]
return(new_data[n,])}
df<- iris
sorted_df<- sort_head(df, Petal.Length, 5)
print(sorted_df)
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df$Petal.Length, decreasing = TRUE),]
return(new_data[1:n,])}
df<- iris
sorted_df<- sort_head(df, Petal.Length, 5)
print(sorted_df)
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df$var.name, decreasing = TRUE),]
return(new_data[1:n,])}
df<- iris
sorted_df<- sort_head(df, Petal.Length, 5)
sort_head<- function(df, var.name, n) {
# newdata <- df[sort(df$var_name,decreasing= TRUE), ]
new_data <- df[order(df[,var.name], decreasing = TRUE),]
return(new_data[1:n,])}
df<- iris
sorted_df<- sort_head(df, "Petal.Length", 5)
print(sorted_df)
faithful
head(faithful)
df<- head(faithful)
print(df)
median(df)
median(df,n)
median(df[1])
median(df[,1])
df<- faithful
print(df)
median(df[ ,1])
sort_head<- function(df, var.name, n) {
new_data <- df[order(df[,var.name], decreasing = TRUE),]
return(new_data[1:n,])}
df<- iris
sorted_df<- sort_head(df, "Petal.Length", 5)
print(sorted_df)
sort_head<- function(df, var.name, n) {
new_data <- df[order(df[,var.name], decreasing = TRUE),]
#return(new_data[1:n,])}
sorted_df<- sort_head(df, "Petal.Length", n)
return(sorted_df)
}
sort_head<- function(df, var.name, n) {
new_data <- df[order(df[,var.name], decreasing = TRUE),]
return(new_data[1:n,])}
sort_head(iris, "Petal.Length", 5 )
add_median_variable<- function(df, j){
median(faithful[ , 2])
:
median(faithful[ , 2])
median(faithful[ , 1])
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(var9> df[i, j]){append(compared_to_median,"Greater")}
else if (var9< df[i, j]){append(compared_to_median, "Smaller")}
else if (var9= df[i, j]){append(compared_to_median, "Median")}
}
vect<- c(1,2,3,4,5)
vect>3
vect[vect>3]
vect[which(vect>5)]
vect[which(vect>3)]
vect[which(vect>1)]
df<-faithful
df
med<- median(df[ ,2])
med
df[compared_to_median] = c()
df[compared_to_median] = c(76)
df<- (df$compared-to_median)
df<- (df$compared_to_median)
compared_to_median<- c()
print(compared_to_median)
view(df)
show(df)
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1= df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
add_median_variable(faithful,2)
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
add_median_variable<- function(df, j) {
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))
}
data(faithful)
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j) {
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
data(faithful)
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j) {
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
data(faithful)
head(add_median_variable(df = faithful, 1)) data(faithful)
add_median_variable<- function(df, j) {
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
data(faithful)
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j) {
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 1))
head(add_median_variable(df = faithful, 2))
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df[ ,j], compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 2))
head(df)
df(faithful)
df<- faithful
df
head(df)
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df[ ,j], compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 2))
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(median(df[ ,j]), compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 2))
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 2))
add_median_variable<- function(df, j) {
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(df,cbind(compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 2))
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
add_median_variable<- function(df, j){
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
df<- faithful
df
compared_1<- c()
cbind(df,compared_1)
compared_1<- c(i,j)
compared_1<- c(,j)
compared_1<- median(df[ ,1])
cbind(df, comapre)
cbind(df, comapre_1)
add_median_variable<- function(df, j){
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
add_median_variable<- function(df, j){
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 1))
head(add_median_variable(df = faithful, 1))
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j){
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j){
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(merge(df, compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j){
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[ , j]){append(compared_to_median,"Greater")}
else if (med_1< df[ , j]){append(compared_to_median, "Smaller")}
else if (med_1== df[ , j]){append(compared_to_median, "Median")}
return(merge(df, compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 1))
add_median_variable<- function(df, j){
med_1<- median(df[ ,j])
compared_to_median<-c()
for(i in nrow(df)){
if(med_1> df[i, j]){append(compared_to_median,"Greater")}
else if (med_1< df[i, j]){append(compared_to_median, "Smaller")}
else if (med_1== df[i, j]){append(compared_to_median, "Median")}
return(cbind(df, compared_to_median))}}
data(faithful)
head(add_median_variable(df = faithful, 1))
x <- 1:100
class(x) <- "my_numeric"
print.my_numeric <- function(x, ...){
cat("This is my numeric vector.\n")
}
print(x)
